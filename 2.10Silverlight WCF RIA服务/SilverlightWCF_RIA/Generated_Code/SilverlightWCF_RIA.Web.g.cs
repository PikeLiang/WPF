//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SilverlightWCF_RIA
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.ServiceModel.DomainServices;
    using System.ServiceModel.DomainServices.Client;
    using System.ServiceModel.DomainServices.Client.ApplicationServices;
    
    
    /// <summary>
    /// Context for the RIA application.
    /// </summary>
    /// <remarks>
    /// This context extends the base to make application services and types available
    /// for consumption from code and xaml.
    /// </remarks>
    public sealed partial class WebContext : WebContextBase
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the WebContext class.
        /// </summary>
        public WebContext()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the context that is registered as a lifetime object with the current application.
        /// </summary>
        /// <exception cref="InvalidOperationException"> is thrown if there is no current application,
        /// no contexts have been added, or more than one context has been added.
        /// </exception>
        /// <seealso cref="System.Windows.Application.ApplicationLifetimeObjects"/>
        public new static WebContext Current
        {
            get
            {
                return ((WebContext)(WebContextBase.Current));
            }
        }
    }
}
namespace SilverlightWCF_RIA.Web
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel;
    using System.ServiceModel.DomainServices;
    using System.ServiceModel.DomainServices.Client;
    using System.ServiceModel.DomainServices.Client.ApplicationServices;
    using System.ServiceModel.Web;
    
    
    /// <summary>
    /// The domain context corresponding to the 'DomainServiceRIA' domain service.
    /// </summary>
    public sealed partial class DomainServiceRIA : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainServiceRIA"/> class.
        /// </summary>
        public DomainServiceRIA() : 
                this(new WebDomainClient<IDomainServiceRIAContract>(new Uri("SilverlightWCF_RIA-Web-DomainServiceRIA.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainServiceRIA"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The DomainServiceRIA service URI.</param>
        public DomainServiceRIA(Uri serviceUri) : 
                this(new WebDomainClient<IDomainServiceRIAContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainServiceRIA"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this domain context.</param>
        public DomainServiceRIA(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="student"/> entities that have been loaded into this <see cref="DomainServiceRIA"/> instance.
        /// </summary>
        public EntitySet<student> students
        {
            get
            {
                return base.EntityContainer.GetEntitySet<student>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="student"/> entities using the 'GetStudent' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="student"/> entities.</returns>
        public EntityQuery<student> GetStudentQuery()
        {
            this.ValidateMethod("GetStudentQuery", null);
            return base.CreateQuery<student>("GetStudent", null, false, true);
        }
        
        /// <summary>
        /// Creates a new entity container for this domain context's entity sets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new DomainServiceRIAEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'DomainServiceRIA' domain service.
        /// </summary>
        [ServiceContract()]
        public interface IDomainServiceRIAContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetStudent' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DomainServiceRIA/GetStudentDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DomainServiceRIA/GetStudent", ReplyAction="http://tempuri.org/DomainServiceRIA/GetStudentResponse")]
            [WebGet()]
            IAsyncResult BeginGetStudent(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetStudent'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetStudent'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetStudent' operation.</returns>
            QueryResult<student> EndGetStudent(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SubmitChanges' operation.
            /// </summary>
            /// <param name="changeSet">The change-set to submit.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DomainServiceRIA/SubmitChangesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DomainServiceRIA/SubmitChanges", ReplyAction="http://tempuri.org/DomainServiceRIA/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            /// <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class DomainServiceRIAEntityContainer : EntityContainer
        {
            
            public DomainServiceRIAEntityContainer()
            {
                this.CreateEntitySet<student>(EntitySetOperations.All);
            }
        }
    }
    
    /// <summary>
    /// The 'student' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/SilverlightWCF_RIA.Web")]
    public sealed partial class student : Entity
    {
        
        private string _dianhua;
        
        private int _id;
        
        private string _jiguan;
        
        private Nullable<double> _kaofen;
        
        private string _xingbie;
        
        private string _xingming;
        
        private byte[] _zhaopian;
        
        private string _zhuanye;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OndianhuaChanging(string value);
        partial void OndianhuaChanged();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnjiguanChanging(string value);
        partial void OnjiguanChanged();
        partial void OnkaofenChanging(Nullable<double> value);
        partial void OnkaofenChanged();
        partial void OnxingbieChanging(string value);
        partial void OnxingbieChanged();
        partial void OnxingmingChanging(string value);
        partial void OnxingmingChanged();
        partial void OnzhaopianChanging(byte[] value);
        partial void OnzhaopianChanged();
        partial void OnzhuanyeChanging(string value);
        partial void OnzhuanyeChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="student"/> class.
        /// </summary>
        public student()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'dianhua' value.
        /// </summary>
        [DataMember()]
        [StringLength(11)]
        public string dianhua
        {
            get
            {
                return this._dianhua;
            }
            set
            {
                if ((this._dianhua != value))
                {
                    this.OndianhuaChanging(value);
                    this.RaiseDataMemberChanging("dianhua");
                    this.ValidateProperty("dianhua", value);
                    this._dianhua = value;
                    this.RaiseDataMemberChanged("dianhua");
                    this.OndianhuaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'id' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.ValidateProperty("id", value);
                    this._id = value;
                    this.RaisePropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'jiguan' value.
        /// </summary>
        [DataMember()]
        [StringLength(16)]
        public string jiguan
        {
            get
            {
                return this._jiguan;
            }
            set
            {
                if ((this._jiguan != value))
                {
                    this.OnjiguanChanging(value);
                    this.RaiseDataMemberChanging("jiguan");
                    this.ValidateProperty("jiguan", value);
                    this._jiguan = value;
                    this.RaiseDataMemberChanged("jiguan");
                    this.OnjiguanChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'kaofen' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> kaofen
        {
            get
            {
                return this._kaofen;
            }
            set
            {
                if ((this._kaofen != value))
                {
                    this.OnkaofenChanging(value);
                    this.RaiseDataMemberChanging("kaofen");
                    this.ValidateProperty("kaofen", value);
                    this._kaofen = value;
                    this.RaiseDataMemberChanged("kaofen");
                    this.OnkaofenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'xingbie' value.
        /// </summary>
        [DataMember()]
        [StringLength(2)]
        public string xingbie
        {
            get
            {
                return this._xingbie;
            }
            set
            {
                if ((this._xingbie != value))
                {
                    this.OnxingbieChanging(value);
                    this.RaiseDataMemberChanging("xingbie");
                    this.ValidateProperty("xingbie", value);
                    this._xingbie = value;
                    this.RaiseDataMemberChanged("xingbie");
                    this.OnxingbieChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'xingming' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string xingming
        {
            get
            {
                return this._xingming;
            }
            set
            {
                if ((this._xingming != value))
                {
                    this.OnxingmingChanging(value);
                    this.RaiseDataMemberChanging("xingming");
                    this.ValidateProperty("xingming", value);
                    this._xingming = value;
                    this.RaiseDataMemberChanged("xingming");
                    this.OnxingmingChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'zhaopian' value.
        /// </summary>
        [DataMember()]
        public byte[] zhaopian
        {
            get
            {
                return this._zhaopian;
            }
            set
            {
                if ((this._zhaopian != value))
                {
                    this.OnzhaopianChanging(value);
                    this.RaiseDataMemberChanging("zhaopian");
                    this.ValidateProperty("zhaopian", value);
                    this._zhaopian = value;
                    this.RaiseDataMemberChanged("zhaopian");
                    this.OnzhaopianChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'zhuanye' value.
        /// </summary>
        [DataMember()]
        [StringLength(20)]
        public string zhuanye
        {
            get
            {
                return this._zhuanye;
            }
            set
            {
                if ((this._zhuanye != value))
                {
                    this.OnzhuanyeChanging(value);
                    this.RaiseDataMemberChanging("zhuanye");
                    this.ValidateProperty("zhuanye", value);
                    this._zhuanye = value;
                    this.RaiseDataMemberChanged("zhuanye");
                    this.OnzhuanyeChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
}
